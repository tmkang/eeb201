}
for (tt in 1:ttMax){nn[tt+1] <- RR*nn[tt]}
geometrixFunction <- function(N0 = 10, RR = 0.9, ttMax = 20)
plot(1:(ttMax+1), nn, xlab = "time", ylab = "N", col = "hot pink")
geometrixFunction <- function(N0, RR, ttMax) {
nn <- matrix(NA, nrow=1, ncol=ttMax+1)
nn[1] <- N0
N0 <- 25
tt <- c(1:ttMax)
ttMax <- 100
RR <- 1.05
for (tt in 1:ttMax){nn[tt+1] <- RR*nn[tt]}
geometrixFunction <- function(N0 = 10, RR = 0.9, ttMax = 20)
plot(1:(ttMax+1), nn, xlab = "time", ylab = "N", col = "hot pink")
geometrixFunction <- function(N0, RR, ttMax) {
nn <- matrix(NA, nrow=1, ncol=ttMax+1)
nn[1] <- N0
tt <- c(1:ttMax)
for (tt in 1:ttMax){nn[tt+1] <- RR*nn[tt]}
geometrixFunction <- function(N0 = 10, RR = 0.9, ttMax = 20)
plot(1:(ttMax+1), nn, xlab = "time", ylab = "N", col = "hot pink")
]
for (tt in 1:ttMax){nn[tt+1] <- RR*nn[tt]}}
geometrixFunction <- function(N0, RR, ttMax) {
nn <- matrix(NA, nrow=1, ncol=ttMax+1)
nn[1] <- N0
for (tt in 1:ttMax){nn[tt+1] <- RR*nn[tt]}}
geometrixFunction(N0 = 10, RR = 0.9, ttMax = 20)
plot(1:(ttMax+1), nn, xlab = "time", ylab = "N", col = "hot pink")
geometrixFunction <- function(N0, RR, ttMax) {
nn <- matrix(NA, nrow=1, ncol=ttMax+1)
nn[1] <- N0
for (tt in 1:ttMax){nn[tt+1] <- RR*nn[tt]}
plot(1:(ttMax+1), nn, xlab = "time", ylab = "N", col = "hot pink")}
geometrixFunction(N0 = 10, RR = 0.9, ttMax = 20)
geometrixFunction(N0 = 20, RR = 0.85, ttMax = 40)
nn <- matrix(NA, nrow = 1, ncol = ttMax+1)
nn[1] <- N0
for (tt in 1:ttMax){nn(tt+1) <- nn[tt]*(1+rr(1-(nn[tt]/kk))}
nn <- matrix(NA, nrow = 1, ncol = ttMax+1)
nn[1] <- N0
for (tt in 1:ttMax){nn[tt+1] <- nn[tt](1+rr(1-(nn[tt]/kk))}
nn <- matrix(NA, nrow = 1, ncol = ttMax+1)
nn[1] <- N0
for (tt in 1:ttMax){nn[tt+1] <- nn[tt](1+rr(1-((nn[tt])/kk))}
nn <- matrix(NA, nrow = 1, ncol = ttMax+1)
nn[1] <- N0
for (tt in 1:ttMax){
nn[tt+1] <- nn[tt](1+rr(1-((nn[tt])/kk))
}
nn <- matrix(NA, nrow = 1, ncol = ttMax+1)
nn[1] <- N0
for (tt in 1:ttMax){
nn[tt+1] <- nn[tt]*(1+rr*(1-((nn[tt])/kk))
}
nn <- matrix(NA, nrow = 1, ncol = ttMax+1)
nn[1] <- N0
for (tt in 1:ttMax){
nn[tt+1] <- nn[tt]*(1+rr*(1-(nn[tt]/kk))
}
nn <- matrix(NA, nrow = 1, ncol = ttMax+1)
nn[1] <- N0
for (tt in 1:ttMax){
nn[tt+1] <- nn[tt]*(1+rr*(1-(nn[tt]/kk)))
}
nn <- matrix(NA, nrow = 1, ncol = ttMax+1)
nn[1] <- N0
rr <- 0.55
for (tt in 1:ttMax){
nn[tt+1] <- nn[tt]*(1+rr*(1-(nn[tt]/kk)))
}
nn <- matrix(NA, nrow = 1, ncol = ttMax+1)
nn[1] <- N0
rr <- 0.55
kk <- 100
for (tt in 1:ttMax){
nn[tt+1] <- nn[tt]*(1+rr*(1-(nn[tt]/kk)))
}
discLogRFunc <- function (N0, rr, kk)for (tt in 1:ttMax){
nn[tt+1] <- nn[tt]*(1+rr*(1-(nn[tt]/kk)))
plot(1:(ttMax+1), nn, xlab = "time", ylab = "N", col = "hot pink")
}
discLogRFunc(N0=10, rr=0.5, kk=100)
for (ii in 1:9)
print(ii)
for (ii in 1:9){cat"*"}
for (ii in 1:9){cat *}
for (ii in 1:9){print (*)}
for (ii in 1:9){print ("*")}
for (ii in 1:9){print ("*" "&")}
for (ii in 1:9){print ("*", "&")}
source('~/Desktop/eeb201/Exercise.R')
for (ii in 1:9){print ("*"), sep="&")}
for (ii in 1:9){cat ("*"), sep="&")}
for (ii in 1:9){print ("*,sep=\&)}
for (ii in 1:9){print ("*&")}
for (ii in 1:9){print ("*&",sep='')}
for (ii in 1:9){cat("*",'')}
for (ii in 1:9){cat("*",'&')}
for (ii in 1:10){cat("*",'&')}
for (ii in 1:10){cat("*", sep="&")}
for (ii in 1:10){cat("*", sep=\&)}
for (ii in 1:10){print("*", sep="&")}
for (ii in 1:10){cat("*", "&")}
for (ii in 1:10){cat(paste("*", "&")}
for (ii in 1:10){cat(paste("*", "&"))}
for (ii in 1:10){cat(paste("*", "&"))}
for (ii in 1:8){cat(paste("*", "&", "*"))}
for (ii in 1:10){cat(paste("*", "&"))}
pdf("RplotExcersie.pdf", width=4, height=5)
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- c(-10,10, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_s1 <- hist(s1, breaks=bins)$counts
counts_s3 <- hist(s3, breaks=bins)$counts
barplot(rbinds(counts_s1, counts_s3), col=c("hot pink", "purple"), beside=T, names.arg=seq(-10, 10, by=1),
xlab="Value", ylab="Count")
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- c(-10,10, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_s1 <- hist(s1, breaks=bins)$counts
counts_s3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_s1, counts_s3), col=c("hot pink", "sky blue"), beside=T, names.arg=seq(-10, 10, by=1),
xlab="Value", ylab="Count")
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- c(-10,10, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts1 <- hist(s1, breaks=bins)$counts
counts3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts1, counts3), col=c("hot pink", "sky blue"), beside=T, names.arg=seq(-10, 10, by=1),
xlab="Value", ylab="Count")
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- c(-10,10, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c("hot pink", "sky blue"), beside=T, names.arg=seq(-10, 10, by=1),
xlab="Value", ylab="Count")
hist(s3, breaks=bins)$breaks
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- c(-10,11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c("hot pink", "sky blue"), beside=T, names.arg=seq(-10, 10, by=1),
xlab="Value", ylab="Count")
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- c(-10,11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c("hotpink", "skyblue"), beside=T, names.arg=seq(-10, 10, by=1),
xlab="Value", ylab="Count")
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- c(-10,11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c("pink", "blue"), beside=T, names.arg=seq(-10, 10, by=1),
xlab="Value", ylab="Count")
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- c(-10,11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c("pink", "blue"), beside=T, names.arg=seq(-10, 11, by=1),
xlab="Value", ylab="Count")
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- c(-10,11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c("red", "blue"), beside=T, names.arg=seq(-10, 11, by=1),
xlab="Value", ylab="Count")
barplot(rbind(counts_1, counts_3), col=c(2,4), beside=T, names.arg=seq(-10, 11, by=1),
xlab="Value", ylab="Count")
counts_1
counts_3
hist(s1, breaks=bins)$breaks
s1 <- rnorm(1000, mean=1, sd=1)
s1 <- rnorm(1000, mean=0, sd=1)
bins <- c(-10,11, by=1)
hist(s1, breaks=bins)$breaks
s1
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- c(-10:11, by=1)
hist(s1, breaks=bins)$breaks
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- seq(-10, 11, by=1)
hist(s1, breaks=bins)$breaks
s1 <- rnorm(1000, mean=1, sd=1)
s3 <- rnorm(1000, mean=1, sd=3)
bins <- seq(-10, 11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c(2,4), beside=T, names.arg=seq(-10, 11, by=1),
xlab="Value", ylab="Count")
counts_1
counts_3
# Sep 17th
pdf("RplotExcersie.pdf", width=4, height=5)
s1 <- rnorm(1000, mean=0, sd=1)
s3 <- rnorm(1000, mean=0, sd=3)
bins <- seq(-10, 11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c(2,4), beside=T, names.arg=seq(-10, 11, by=1),
xlab="Value", ylab="Count")
# Sep 17th
pdf("RplotExcersie.pdf", width=4, height=5)
s1 <- rnorm(1000, mean=0, sd=1)
s3 <- rnorm(1000, mean=0, sd=3)
bins <- seq(-10, 11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c(2,4), beside=T,
xlab="Value", ylab="Count")
# Sep 17th
#pdf("RplotExcersie.pdf", width=4, height=5)
s1 <- rnorm(1000, mean=0, sd=1)
s3 <- rnorm(1000, mean=0, sd=3)
bins <- seq(-10, 11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c(2,4), beside=T,
xlab="Value", ylab="Count")
barplot(rbind(counts_1, counts_3), col=c(2,4), beside=T,
xlab="Value", ylab="Count")
# Sep 17th
#pdf("RplotExcersie.pdf", width=4, height=5)
s1 <- rnorm(1000, mean=0, sd=1)
s3 <- rnorm(1000, mean=0, sd=3)
bins <- seq(-10, 11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c(2,4), beside=T, names.arg = seq(-10, 11, by=1),
xlab="Value", ylab="Count")
# Sep 17th
#pdf("RplotExcersie.pdf", width=4, height=5)
s1 <- rnorm(1000, mean=0, sd=1)
s3 <- rnorm(1000, mean=0, sd=3)
bins <- seq(-10, 11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c(2,4), beside=T, names.arg = seq(-10, 10, by=1),
xlab="Value", ylab="Count")
s1 <- rnorm(1000, mean=0, sd=1)
s3 <- rnorm(1000, mean=0, sd=3)
bins <- seq(-10, 11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c(2,4), beside=T, names.arg = seq(-10, 10, by=1),
xlab="Value", ylab="Count")
dev.off()
s1 <- rnorm(1000, mean=0, sd=1)
s3 <- rnorm(1000, mean=0, sd=3)
bins <- seq(-10, 11, by=1)
hist(s1, breaks=bins)$breaks
hist(s3, breaks=bins)$breaks
counts_1 <- hist(s1, breaks=bins)$counts
counts_3 <- hist(s3, breaks=bins)$counts
barplot(rbind(counts_1, counts_3), col=c(2,4), beside=T, names.arg = seq(-10, 10, by=1),
xlab="Value", ylab="Count")
hapmap_CEU_r23a_chr2_ld.txt',header=TRUE
head(snpsDataFrame)
snpsDataFrame <- read.table('hapmap_CEU_r23a_chr2_ld.txt',header=TRUE)
snpsDataFrame=read.table('hapmap_CEU_r23a_chr2_ld-1.txt',header=TRUE)
head(snpsDataFrame)
dim(snpsDataFrame)
names(snpsDataFrame)
row.names(snpsDataFrame)
snps <- as.matrix(snpsDataFrame)
dim(snps)
testSNP=snps["rs218206_G",]
table(testSNP)
het=sum(testSNP==1)/lenght(testSNP)
het=sum(testSNP==1)/length(testSNP)
print(het=sum(testSNP==1)/length(testSNP))
list(het=sum(testSNP==1)/length(testSNP))
hem
het
testSNP=snps["rs6717613_A",]
table(testSNP)
testSNP==1
length(testSNP)
is.na(testSNP)
het=sum(testSNP==1)/length(testSNP)
het
het=sum(testSNP==1,na.rm=TRUE)/sum(!is.na(testSNP))
het
freq=sum(testSNP,na.rm=TRUE)/(2.0*sum(!is.na(testSNP)))
freq
calc_freq=function(x){
return(sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x))))
}
calc_het=function(x){
return(sum(x==1,na.rm=TRUE)/(sum(!is.na(x))))
}
freq=apply(snps,1,calc_freq)
freq
head(freq)
plot(freq,het,xlab="Frequency",ylab="Heterozygosity")  # Scatter plot
plot(freq,het,xlab="Frequency",ylab="Heterozygosity")
het=apply(snps,1,calc_het)
head(het)
plot(freq,het,xlab="Frequency",ylab="Heterozygosity")
p=seq(0,0.5,by=0.05)
points(p,2*p*(1-p),type="l",col=2)
lines(p, 2*p*(1-p), col="hot pink")
compute_chisquare=function(x){
freq=sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x)))
cnt0=sum(x==0,na.rm=TRUE)
cnt1=sum(x==1,na.rm=TRUE)
cnt2=sum(x==2,na.rm=TRUE)
obscnts=c(cnt0,cnt1,cnt2)
#print(obscnts)
n=sum(obscnts)
expcnts=c((1-freq)^2,2*freq*(1-freq),freq^2)*n
chisq=sum((obscnts-expcnts)^2/expcnts)
return(chisq)
}
compute_chisquare()
chisqs=apply(snps,1,compute_chisquare)
chisqs2=apply(snps,1,compute_chisquare_2)
compute_chisquare_2=function(x){
freq=sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x)))
cnt0=sum(x==0,na.rm=TRUE)
cnt1=sum(x==1,na.rm=TRUE)
cnt2=sum(x==2,na.rm=TRUE)
obscnts=c(cnt0,cnt1,cnt2)
#print(obscnts)
n=sum(obscnts)
#here we use the built-in function for the chi-sq distribution:
exp_probs=c((1-freq)^2,2*freq*(1-freq),freq^2) #note, here we don't multiply by n
chisq<-chisq.test(obscnts,p=exp_probs, correct = FALSE)$statistic
return(chisq)
chisqs=apply(snps,1,compute_chisquare)
chisqs2=apply(snps,1,compute_chisquare_2)
chisqs
cor.test(chisqs, chisqs2)
plot(chisqrs, chisqs2)
plot(chisqs,chisqs2)
dev.off()
plot(chisqs,chisqs2)
+
+ dev.off()
plot(chisqs,chisqs2)
]
plot(chisqs,chisqs2)
compute_chisquare=function(x){
freq=sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x)))
cnt0=sum(x==0,na.rm=TRUE)
cnt1=sum(x==1,na.rm=TRUE)
cnt2=sum(x==2,na.rm=TRUE)
obscnts=c(cnt0,cnt1,cnt2)
#print(obscnts)
n=sum(obscnts)
expcnts=c((1-freq)^2,2*freq*(1-freq),freq^2)*n
chisq=sum((obscnts-expcnts)^2/expcnts)
return(chisq)
}
#let's make a second funtion that makes use of R's built in chisq.test function
compute_chisquare_2=function(x){
freq=sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x)))
cnt0=sum(x==0,na.rm=TRUE)
cnt1=sum(x==1,na.rm=TRUE)
cnt2=sum(x==2,na.rm=TRUE)
obscnts=c(cnt0,cnt1,cnt2)
#print(obscnts)
n=sum(obscnts)
#here we use the built-in function for the chi-sq distribution:
exp_probs=c((1-freq)^2,2*freq*(1-freq),freq^2) #note, here we don't multiply by n
chisq<-chisq.test(obscnts,p=exp_probs, correct = FALSE)$statistic
return(chisq)
}
# Apply the compute_chi_square function to each snp
chisqs=apply(snps,1,compute_chisquare)
chisqs2=apply(snps,1,compute_chisquare_2)
warning()
warnings()
cor.test(chisqs,chisqs2)
plot(chisqs,chisqs2)
head(chisqs)
pvals=pchisq(chisqs,1,lower.tail=FALSE)
pvals
head(pvals)
signifthres<-0.05
sum(pvals<signifthres)
mean(pvals<signifthres)
sig_snps<-subset(pvals,pvals<0.05) #pull out the snps with P-vals<0.05
sig_snp_ids<-names(sig_snps)
sig_snp_ids
head(sig_snps)
head(sig_snp_ids)
sig_geno<-snps[sig_snp_ids,]
dim(sig_geno)
View(geometrixFunction)
table(testSNP)
testSNP==1
length(testSNP)
is.na(testSNP)
p=seq(0,0.5,by=0.05)   # Set-up a vector with a sequence of allele frequencies
points(p,2*p*(1-p),type="l",col=2) # Plot the HW expectation as a line in red
compute_chisquare=function(x){
freq=sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x)))
cnt0=sum(x==0,na.rm=TRUE)
cnt1=sum(x==1,na.rm=TRUE)
cnt2=sum(x==2,na.rm=TRUE)
obscnts=c(cnt0,cnt1,cnt2)
#print(obscnts)
n=sum(obscnts)
expcnts=c((1-freq)^2,2*freq*(1-freq),freq^2)*n
chisq=sum((obscnts-expcnts)^2/expcnts)
return(chisq)
}
chisqs=apply(snps,1,compute_chisquare)
plot(chisqs,chisqs2)
pvals=pchisq(chisqs,1,lower.tail=FALSE)
signifthres<-0.05
sum(pvals<signifthres)
mean(pvals<signifthres)
dev.off
dev.off()
p=seq(0,0.5,by=0.05)   # Set-up a vector with a sequence of allele frequencies
points(p,2*p*(1-p),type="l",col=2) # Plot the HW expectation as a line in red
dev.off()
help(dev.off)
dev.set()
p=seq(0,0.5,by=0.05)   # Set-up a vector with a sequence of allele frequencies
points(p,2*p*(1-p),type="l",col=2) # Plot the HW expectation as a line in red
p=seq(0,0.5,by=0.05)   # Set-up a vector with a sequence of allele frequencies
> points(p,2*p*(1-p),type="l",col=2) # Plot the HW expectation as a line in red
p=seq(0,0.5,by=0.05)   # Set-up a vector with a sequence of allele frequencies
points(p,2*p*(1-p),type="l",col=2) # Plot the HW expectation as a line in red
p=seq(0,0.5,by=0.05)   # Set-up a vector with a sequence of allele frequencies
points(p,2*p*(1-p),type="l",col=2) # Plot the HW expectation as a line in red
help("plot")
p=seq(0,0.5,by=0.05)
head(p)
compute_chisquare=function(x){
freq=sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x)))
cnt0=sum(x==0,na.rm=TRUE)
cnt1=sum(x==1,na.rm=TRUE)
cnt2=sum(x==2,na.rm=TRUE)
obscnts=c(cnt0,cnt1,cnt2)
#print(obscnts)
n=sum(obscnts)
expcnts=c((1-freq)^2,2*freq*(1-freq),freq^2)*n
chisq=sum((obscnts-expcnts)^2/expcnts)
return(chisq)
}
#let's make a second funtion that makes use of R's built in chisq.test function
compute_chisquare_2=function(x){
freq=sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x)))
cnt0=sum(x==0,na.rm=TRUE)
cnt1=sum(x==1,na.rm=TRUE)
cnt2=sum(x==2,na.rm=TRUE)
obscnts=c(cnt0,cnt1,cnt2)
#print(obscnts)
n=sum(obscnts)
#here we use the built-in function for the chi-sq distribution:
exp_probs=c((1-freq)^2,2*freq*(1-freq),freq^2) #note, here we don't multiply by n
chisq<-chisq.test(obscnts,p=exp_probs, correct = FALSE)$statistic
return(chisq)
}
# Apply the compute_chi_square function to each snp
chisqs=apply(snps,1,compute_chisquare)
chisqs2=apply(snps,1,compute_chisquare_2)
#check to see that the chisquare statistcs are the same:
#first do this by computing Pearson's correlation coefficient:
cor.test(chisqs,chisqs2)
#we can also do a quick scatterplot:
plot(chisqs,chisqs2)
# Compute p-values for each chi-square value using the pchisq function
pvals=pchisq(chisqs,1,lower.tail=FALSE)
sig_snps<-subset(pvals,pvals<0.05) #pull out the snps with P-vals<0.05
sig_snp_ids<-names(sig_snps)
head(sig_snp_ids)
